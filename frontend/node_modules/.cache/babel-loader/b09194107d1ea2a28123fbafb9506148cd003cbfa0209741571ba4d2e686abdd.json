{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TANMAYI\\\\Documents\\\\booking-system-react-tailwind\\\\frontend\\\\src\\\\pages\\\\admin\\\\SlotsTab.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotsTab = () => {\n  _s();\n  const [slots, setSlots] = useState([]);\n  const [time, setTime] = useState('');\n\n  // Fetch all slots from backend\n  const fetchSlots = async () => {\n    try {\n      const res = await fetch('http://localhost:5000/api/slots');\n      const data = await res.json();\n      console.log(\"Slots received:\", data);\n      setSlots(data.slots); // ✅ Fix: extract array from response\n    } catch (err) {\n      console.error(\"Failed to fetch slots\", err);\n    }\n  };\n\n  // Add a new slot\n  const addSlot = async () => {\n    if (!time) return;\n    try {\n      const res = await fetch('http://localhost:5000/api/slots', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          time\n        })\n      });\n      const newSlot = await res.json();\n      setSlots([...slots, newSlot]);\n      setTime('');\n    } catch (err) {\n      console.error('Error adding slot:', err);\n    }\n  };\n\n  // Delete a slot\n  const deleteSlot = async id => {\n    try {\n      await fetch(`http://localhost:5000/api/slots/${id}`, {\n        method: 'DELETE'\n      });\n      setSlots(slots.filter(slot => slot.id !== id));\n    } catch (err) {\n      console.error('Error deleting slot:', err);\n    }\n  };\n  useEffect(() => {\n    fetchSlots();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto p-4 border rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Manage Time Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: time,\n        onChange: e => setTime(e.target.value),\n        className: \"border p-2 rounded flex-grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSlot,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: slots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex justify-between border-b py-2\",\n        children: [slot, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteSlot(slot) // ⛔ also fix deleteSlot logic if slot is string\n          ,\n          className: \"text-red-600 hover:underline\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, slot + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotsTab, \"BLggD9d0PW+SVSedKOndEikPLm8=\");\n_c = SlotsTab;\nexport default SlotsTab;\nvar _c;\n$RefreshReg$(_c, \"SlotsTab\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SlotsTab","_s","slots","setSlots","time","setTime","fetchSlots","res","fetch","data","json","console","log","err","error","addSlot","method","headers","body","JSON","stringify","newSlot","deleteSlot","id","filter","slot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","index","_c","$RefreshReg$"],"sources":["C:/Users/TANMAYI/Documents/booking-system-react-tailwind/frontend/src/pages/admin/SlotsTab.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SlotsTab = () => {\r\n  const [slots, setSlots] = useState([]);\r\n  const [time, setTime] = useState('');\r\n\r\n  // Fetch all slots from backend\r\n  const fetchSlots = async () => {\r\n  try {\r\n    const res = await fetch('http://localhost:5000/api/slots');\r\n    const data = await res.json();\r\n    console.log(\"Slots received:\", data);\r\n    setSlots(data.slots); // ✅ Fix: extract array from response\r\n  } catch (err) {\r\n    console.error(\"Failed to fetch slots\", err);\r\n  }\r\n};\r\n\r\n  // Add a new slot\r\n  const addSlot = async () => {\r\n    if (!time) return;\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/slots', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ time }),\r\n      });\r\n      const newSlot = await res.json();\r\n      setSlots([...slots, newSlot]);\r\n      setTime('');\r\n    } catch (err) {\r\n      console.error('Error adding slot:', err);\r\n    }\r\n  };\r\n\r\n  // Delete a slot\r\n  const deleteSlot = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/slots/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      setSlots(slots.filter((slot) => slot.id !== id));\r\n    } catch (err) {\r\n      console.error('Error deleting slot:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSlots();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-4 border rounded\">\r\n      <h3 className=\"text-xl font-semibold mb-4\">Manage Time Slots</h3>\r\n      <div className=\"flex gap-2 mb-4\">\r\n        <input\r\n          type=\"time\"\r\n          value={time}\r\n          onChange={(e) => setTime(e.target.value)}\r\n          className=\"border p-2 rounded flex-grow\"\r\n        />\r\n        <button onClick={addSlot} className=\"bg-blue-600 text-white px-4 py-2 rounded\">\r\n          Add\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {slots.map((slot, index) => (\r\n          <li key={slot + index} className=\"flex justify-between border-b py-2\">\r\n          {slot}\r\n          <button\r\n            onClick={() => deleteSlot(slot)} // ⛔ also fix deleteSlot logic if slot is string\r\n            className=\"text-red-600 hover:underline\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n        ))}\r\n      </ul>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotsTab;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}